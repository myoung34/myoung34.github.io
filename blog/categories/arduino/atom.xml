<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">

  <title><![CDATA[Category: arduino | Mark Young]]></title>
  <link href="https://markyoung.us/blog/categories/arduino/atom.xml" rel="self"/>
  <link href="https://markyoung.us/"/>
  <updated>2025-03-06T19:08:40+00:00</updated>
  <id>https://markyoung.us/</id>
  <author>
    <name><![CDATA[Mark Young]]></name>
    
  </author>
  <generator uri="https://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[UDOO and an Arduino LCD Part 2 - 3d Printer]]></title>
    <link href="https://markyoung.us/post/udoo-and-an-arduino-lcd-3d"/>
    <updated>2014-07-26T00:00:00+00:00</updated>
    <id>https://markyoung.us/post/udoo-3d</id>
    <content type="html"><![CDATA[<p>I finally broke down and bought a <a href="https://www.bukobot.com/bukito">3d printer</a>. <!--more--> It&rsquo;s from Deezmaker, which I got off kickstarter. I took a pre-made udoo case off thingiverse, and modified it to fit my needs. Thankfully, I still remember how to use Blender, which has native STL support.</p>

<p>I expanded it horizontally a little to allow some cord room, and laid the sata drive below it, with a 3d printed spacer. Then mounted the UDOO inside. After much trial and error on the lid, I got snap fit, and some holes cut out for the button and LCD. I added screw mounts, but that didn&rsquo;t work out too well, so I ended up supergluing my home-made PCB&rsquo;s to the underside of it. One is the clock battery, the other is a push button and resistor, attached to an Arduino riser shield just below the screen. Bam.</p>

<p>Also, excuse the not-so-perfect printing and mounting. I&rsquo;ve literally not printed out anything else. Go big or go home folks. Related: I love 3d printing.</p>

<p>For pics, checkout <a href="/post/udoo-and-an-arduino-lcd">the updated page</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UDOO and an Arduino LCD]]></title>
    <link href="https://markyoung.us/post/udoo-and-an-arduino-lcd"/>
    <updated>2014-03-03T00:00:00+00:00</updated>
    <id>https://markyoung.us/post/udoo-lcd</id>
    <content type="html"><![CDATA[<p>I have continued to want more out of my UDOO, so I decided to make use of a cracked LCD I had sitting around from Adafruit, by having the UDOO display system information to it.<!--more-->
A side note: the linux distro I&rsquo;m using is Ubuntu 12.04 LTS for ARM, and by a cracked LCD I mean the digitizer doesn&rsquo;t work. You can modify this code to use the touchscreen functionality of the screen
if you wish.</p>

<p>Here&rsquo;s the parts list:</p>

<ul>
<li><a href="https://www.adafruit.com/products/376">This TFT LCD</a>. It&rsquo;s worth noting they&rsquo;ve made a newer revision, but it shouldn&rsquo;t be any different.</li>
<li><a href="https://www.radioshack.com/product/index.jsp?productId=2062347">A 10k Ohm resistor</a></li>
<li><a href="https://www.radioshack.com/product/index.jsp?productId=18761926">A Jumper kit and board</a> or an <a href="https://www.adafruit.com/products/51">arduino shield</a></li>
<li><a href="https://bit.ly/1eONbBk">A breadboard button</a></li>
</ul>


<p>Here&rsquo;s a short version of the steps:</p>

<ul>
<li>Wire up the button exactly the same as the <a href="https://www.arduino.cc/en/Tutorial/Switch#.UxVG7PldUkA">arduino tutorial</a> to digital 2.</li>
<li><a href="https://learn.adafruit.com/2-8-tft-touch-shield/controlling-the-backlight">Modify your LCD to use Digital 3 to control the backlight</a>.</li>
<li><p>Set up the <code>ttymxc3</code> device in linux for Serial on 9600 baud</p>

<pre><code> sudo stty -F /dev/ttymxc3 cs8 9600 ignbrk -brkint -icrnl -imaxbel \
 -opost -onlcr -isig -icanon -iexten -echo -echoe -echok -echoctl -echoke noflsh -ixon -crtscts
</code></pre>

<ul>
<li>Add that command to <code>/etc/rc.local</code> to make it permanent.</li>
</ul>
</li>
<li><p>Add <a href="https://github.com/myoung34/udoo-lcd-sysinfo/blob/master/script/udoo.sh">this bash script</a> to <code>/usr/local/bin</code></p>

<ul>
<li>Set it for startup by adding <code>sh /usr/local/bin/udoo.sh | cat &gt; /dev/ttymxc3</code> to <code>/etc/rc.local</code></li>
<li><p>Add a cron to update it every minute by adding this to <code>/etc/crontab</code></p>

<pre><code>  * * * * * root sh /usr/local/bin/udoo.sh | cat &gt; /dev/ttymxc3
</code></pre></li>
</ul>
</li>
<li><p>Load <a href="https://github.com/myoung34/udoo-lcd-sysinfo/blob/master/sketch/udoo.ino">this sketch</a> to your Arduino.</p></li>
<li>Reboot the arduino via the <code>RST</code> switch, or by a full power reboot, ensuring you replace the <code>J18</code> jumper so that the chips can communicate.</li>
</ul>


<p>If everything went well, your UDOO should look and act like the pictures below. Good luck!</p>

<p>UPDATED 7/26/2014: Pics attached of the <a href="/post/udoo-and-an-arduino-lcd-3d">3d printed case</a></p>

<p><img class="left" src="/images/IMG_0792.jpg" title="udoo 3" >
<img class="left" src="/images/IMG_0793.jpg" title="udoo 3" >
<img class="left" src="/images/IMG_0794.jpg" title="udoo 3" >
<img class="left" src="/images/IMG_0795.jpg" title="udoo 3" >
<img class="left" src="/images/IMG_0796.jpg" title="udoo 3" >
<img class="left" src="/images/IMG_1003.jpg" title="udoo 3d" >
<img class="left" src="/images/IMG_1004.jpg" title="udoo 3d" >
<img class="left" src="/images/IMG_1005.jpg" title="udoo 3d" >
<img class="left" src="/images/IMG_1006.jpg" title="udoo 3d" >
<img class="left" src="/images/IMG_1007.jpg" title="udoo 3d" >
<img class="left" src="/images/IMG_1008.jpg" title="udoo 3d" >
<img class="left" src="/images/IMG_1010.jpg" title="udoo 3d" >
<img class="left" src="/images/IMG_1012.jpg" title="udoo 3d" ></p>
]]></content>
  </entry>
  
</feed>
